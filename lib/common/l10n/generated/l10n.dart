// GENERATED CODE - DO NOT MODIFY BY HAND
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'intl/messages_all.dart';

// **************************************************************************
// Generator: Flutter Intl IDE plugin
// Made by Localizely
// **************************************************************************

// ignore_for_file: non_constant_identifier_names, lines_longer_than_80_chars
// ignore_for_file: join_return_with_assignment, prefer_final_in_for_each
// ignore_for_file: avoid_redundant_argument_values, avoid_escaping_inner_quotes

class S {
  S();

  static S? _current;

  static S get current {
    assert(
      _current != null,
      'No instance of S was loaded. Try to initialize the S delegate before accessing S.current.',
    );
    return _current!;
  }

  static const AppLocalizationDelegate delegate = AppLocalizationDelegate();

  static Future<S> load(Locale locale) {
    final name = (locale.countryCode?.isEmpty ?? false)
        ? locale.languageCode
        : locale.toString();
    final localeName = Intl.canonicalizedLocale(name);
    return initializeMessages(localeName).then((_) {
      Intl.defaultLocale = localeName;
      final instance = S();
      S._current = instance;

      return instance;
    });
  }

  static S of(BuildContext context) {
    final instance = S.maybeOf(context);
    assert(
      instance != null,
      'No instance of S present in the widget tree. Did you add S.delegate in localizationsDelegates?',
    );
    return instance!;
  }

  static S? maybeOf(BuildContext context) {
    return Localizations.of<S>(context, S);
  }

  /// `PureLive`
  String get app_name {
    return Intl.message('PureLive', name: 'app_name', desc: '', args: []);
  }

  /// `This project is a purely local live transcoding application , login to use a third-party SupaBase service , I do not collect user information , the application directly request the live official interface , all the operations generated by the user's local retention of data , optional use of SupaBase synchronization data .`
  String get app_legalese {
    return Intl.message(
      'This project is a purely local live transcoding application , login to use a third-party SupaBase service , I do not collect user information , the application directly request the live official interface , all the operations generated by the user\'s local retention of data , optional use of SupaBase synchronization data .',
      name: 'app_legalese',
      desc: '',
      args: [],
    );
  }

  /// `Cancel`
  String get cancel {
    return Intl.message('Cancel', name: 'cancel', desc: '', args: []);
  }

  /// `Confirm`
  String get confirm {
    return Intl.message('Confirm', name: 'confirm', desc: '', args: []);
  }

  /// `Update`
  String get update {
    return Intl.message('Update', name: 'update', desc: '', args: []);
  }

  /// `Remove`
  String get remove {
    return Intl.message('Remove', name: 'remove', desc: '', args: []);
  }

  /// `Move To Top`
  String get move_to_top {
    return Intl.message('Move To Top', name: 'move_to_top', desc: '', args: []);
  }

  /// `Favorites`
  String get favorites_title {
    return Intl.message(
      'Favorites',
      name: 'favorites_title',
      desc: '',
      args: [],
    );
  }

  /// `No Favorites`
  String get empty_favorite_title {
    return Intl.message(
      'No Favorites',
      name: 'empty_favorite_title',
      desc: '',
      args: [],
    );
  }

  /// `Please follow live rooms first`
  String get empty_favorite_subtitle {
    return Intl.message(
      'Please follow live rooms first',
      name: 'empty_favorite_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `No Offline Room`
  String get empty_favorite_offline_title {
    return Intl.message(
      'No Offline Room',
      name: 'empty_favorite_offline_title',
      desc: '',
      args: [],
    );
  }

  /// `Please follow live rooms first`
  String get empty_favorite_offline_subtitle {
    return Intl.message(
      'Please follow live rooms first',
      name: 'empty_favorite_offline_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `No Online Room`
  String get empty_favorite_online_title {
    return Intl.message(
      'No Online Room',
      name: 'empty_favorite_online_title',
      desc: '',
      args: [],
    );
  }

  /// `Please follow live rooms first`
  String get empty_favorite_online_subtitle {
    return Intl.message(
      'Please follow live rooms first',
      name: 'empty_favorite_online_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Show Offline Rooms`
  String get show_offline_rooms {
    return Intl.message(
      'Show Offline Rooms',
      name: 'show_offline_rooms',
      desc: '',
      args: [],
    );
  }

  /// `Hide Offline Rooms`
  String get hide_offline_rooms {
    return Intl.message(
      'Hide Offline Rooms',
      name: 'hide_offline_rooms',
      desc: '',
      args: [],
    );
  }

  /// `RoomId: {roomid}\nPlatform: {platform}\nName: {nickname}\nTitle: {title}\nLiveStatus: {livestatus}`
  String room_info_content(
    Object roomid,
    Object platform,
    Object nickname,
    Object title,
    Object livestatus,
  ) {
    return Intl.message(
      'RoomId: $roomid\nPlatform: $platform\nName: $nickname\nTitle: $title\nLiveStatus: $livestatus',
      name: 'room_info_content',
      desc: '',
      args: [roomid, platform, nickname, title, livestatus],
    );
  }

  /// `Online`
  String get online_room_title {
    return Intl.message(
      'Online',
      name: 'online_room_title',
      desc: '',
      args: [],
    );
  }

  /// `Offline`
  String get offline_room_title {
    return Intl.message(
      'Offline',
      name: 'offline_room_title',
      desc: '',
      args: [],
    );
  }

  /// `Popular`
  String get popular_title {
    return Intl.message('Popular', name: 'popular_title', desc: '', args: []);
  }

  /// `No Live Found`
  String get empty_live_title {
    return Intl.message(
      'No Live Found',
      name: 'empty_live_title',
      desc: '',
      args: [],
    );
  }

  /// `Click the button below\nto switch platform`
  String get empty_live_subtitle {
    return Intl.message(
      'Click the button below\nto switch platform',
      name: 'empty_live_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Areas`
  String get areas_title {
    return Intl.message('Areas', name: 'areas_title', desc: '', args: []);
  }

  /// `No Area Found`
  String get empty_areas_title {
    return Intl.message(
      'No Area Found',
      name: 'empty_areas_title',
      desc: '',
      args: [],
    );
  }

  /// `Click the button below\nto switch platform`
  String get empty_areas_subtitle {
    return Intl.message(
      'Click the button below\nto switch platform',
      name: 'empty_areas_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `No Live Found`
  String get empty_areas_room_title {
    return Intl.message(
      'No Live Found',
      name: 'empty_areas_room_title',
      desc: '',
      args: [],
    );
  }

  /// `Pull down to refresh data`
  String get empty_areas_room_subtitle {
    return Intl.message(
      'Pull down to refresh data',
      name: 'empty_areas_room_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Switch platform`
  String get switch_platform {
    return Intl.message(
      'Switch platform',
      name: 'switch_platform',
      desc: '',
      args: [],
    );
  }

  /// `Favorite Areas`
  String get favorite_areas {
    return Intl.message(
      'Favorite Areas',
      name: 'favorite_areas',
      desc: '',
      args: [],
    );
  }

  /// `Input live room keyword`
  String get search_input_hint {
    return Intl.message(
      'Input live room keyword',
      name: 'search_input_hint',
      desc: '',
      args: [],
    );
  }

  /// `Only Living`
  String get only_living {
    return Intl.message('Only Living', name: 'only_living', desc: '', args: []);
  }

  /// `No Live Found`
  String get empty_search_title {
    return Intl.message(
      'No Live Found',
      name: 'empty_search_title',
      desc: '',
      args: [],
    );
  }

  /// `You can input other keyword`
  String get empty_search_subtitle {
    return Intl.message(
      'You can input other keyword',
      name: 'empty_search_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Settings`
  String get settings_title {
    return Intl.message('Settings', name: 'settings_title', desc: '', args: []);
  }

  /// `General`
  String get general {
    return Intl.message('General', name: 'general', desc: '', args: []);
  }

  /// `Video`
  String get video {
    return Intl.message('Video', name: 'video', desc: '', args: []);
  }

  /// `Custom`
  String get custom {
    return Intl.message('Custom', name: 'custom', desc: '', args: []);
  }

  /// `Experiment`
  String get experiment {
    return Intl.message('Experiment', name: 'experiment', desc: '', args: []);
  }

  /// `Theme Color`
  String get change_theme_color {
    return Intl.message(
      'Theme Color',
      name: 'change_theme_color',
      desc: '',
      args: [],
    );
  }

  /// `Change the primay color of the app`
  String get change_theme_color_subtitle {
    return Intl.message(
      'Change the primay color of the app',
      name: 'change_theme_color_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Theme Mode`
  String get change_theme_mode {
    return Intl.message(
      'Theme Mode',
      name: 'change_theme_mode',
      desc: '',
      args: [],
    );
  }

  /// `Change form light / dark / system modes`
  String get change_theme_mode_subtitle {
    return Intl.message(
      'Change form light / dark / system modes',
      name: 'change_theme_mode_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Language`
  String get change_language {
    return Intl.message(
      'Language',
      name: 'change_language',
      desc: '',
      args: [],
    );
  }

  /// `Change the display language of the app`
  String get change_language_subtitle {
    return Intl.message(
      'Change the display language of the app',
      name: 'change_language_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Backup &Recover`
  String get backup_recover {
    return Intl.message(
      'Backup &Recover',
      name: 'backup_recover',
      desc: '',
      args: [],
    );
  }

  /// `Create backup and recover`
  String get backup_recover_subtitle {
    return Intl.message(
      'Create backup and recover',
      name: 'backup_recover_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Backup`
  String get create_backup {
    return Intl.message('Backup', name: 'create_backup', desc: '', args: []);
  }

  /// `Used to recover from current`
  String get create_backup_subtitle {
    return Intl.message(
      'Used to recover from current',
      name: 'create_backup_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Recover`
  String get recover_backup {
    return Intl.message('Recover', name: 'recover_backup', desc: '', args: []);
  }

  /// `Recover form selected file`
  String get recover_backup_subtitle {
    return Intl.message(
      'Recover form selected file',
      name: 'recover_backup_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Auto Backup`
  String get auto_backup {
    return Intl.message('Auto Backup', name: 'auto_backup', desc: '', args: []);
  }

  /// `Backup Directory`
  String get backup_directory {
    return Intl.message(
      'Backup Directory',
      name: 'backup_directory',
      desc: '',
      args: [],
    );
  }

  /// `Create backup success`
  String get create_backup_success {
    return Intl.message(
      'Create backup success',
      name: 'create_backup_success',
      desc: '',
      args: [],
    );
  }

  /// `Create backup failed`
  String get create_backup_failed {
    return Intl.message(
      'Create backup failed',
      name: 'create_backup_failed',
      desc: '',
      args: [],
    );
  }

  /// `Select backup file`
  String get select_recover_file {
    return Intl.message(
      'Select backup file',
      name: 'select_recover_file',
      desc: '',
      args: [],
    );
  }

  /// `Recover backup success, please restart`
  String get recover_backup_success {
    return Intl.message(
      'Recover backup success, please restart',
      name: 'recover_backup_success',
      desc: '',
      args: [],
    );
  }

  /// `Recover backup failed`
  String get recover_backup_failed {
    return Intl.message(
      'Recover backup failed',
      name: 'recover_backup_failed',
      desc: '',
      args: [],
    );
  }

  /// `Success`
  String get success {
    return Intl.message('Success', name: 'success', desc: '', args: []);
  }

  /// `Error`
  String get error {
    return Intl.message('Error', name: 'error', desc: '', args: []);
  }

  /// `Dynamic Color`
  String get enable_dynamic_color {
    return Intl.message(
      'Dynamic Color',
      name: 'enable_dynamic_color',
      desc: '',
      args: [],
    );
  }

  /// `Enable Monet dynamic color`
  String get enable_dynamic_color_subtitle {
    return Intl.message(
      'Enable Monet dynamic color',
      name: 'enable_dynamic_color_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Dense Mode`
  String get enable_dense_favorites_mode {
    return Intl.message(
      'Dense Mode',
      name: 'enable_dense_favorites_mode',
      desc: '',
      args: [],
    );
  }

  /// `Display more favorite rooms at once`
  String get enable_dense_favorites_mode_subtitle {
    return Intl.message(
      'Display more favorite rooms at once',
      name: 'enable_dense_favorites_mode_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Play Background`
  String get enable_background_play {
    return Intl.message(
      'Play Background',
      name: 'enable_background_play',
      desc: '',
      args: [],
    );
  }

  /// `When leave app, allow video play background`
  String get enable_background_play_subtitle {
    return Intl.message(
      'When leave app, allow video play background',
      name: 'enable_background_play_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Keep Screen On`
  String get enable_screen_keep_on {
    return Intl.message(
      'Keep Screen On',
      name: 'enable_screen_keep_on',
      desc: '',
      args: [],
    );
  }

  /// `When in live play, keep screen on`
  String get enable_screen_keep_on_subtitle {
    return Intl.message(
      'When in live play, keep screen on',
      name: 'enable_screen_keep_on_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Auto Full Screen`
  String get enable_fullscreen_default {
    return Intl.message(
      'Auto Full Screen',
      name: 'enable_fullscreen_default',
      desc: '',
      args: [],
    );
  }

  /// `When enter live play, auto into full screen`
  String get enable_fullscreen_default_subtitle {
    return Intl.message(
      'When enter live play, auto into full screen',
      name: 'enable_fullscreen_default_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Auto Check Update`
  String get enable_auto_check_update {
    return Intl.message(
      'Auto Check Update',
      name: 'enable_auto_check_update',
      desc: '',
      args: [],
    );
  }

  /// `When enter into app, auto check update`
  String get enable_auto_check_update_subtitle {
    return Intl.message(
      'When enter into app, auto check update',
      name: 'enable_auto_check_update_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Float Video Ratio`
  String get float_overlay_ratio {
    return Intl.message(
      'Float Video Ratio',
      name: 'float_overlay_ratio',
      desc: '',
      args: [],
    );
  }

  /// `When using float window, ratio control the size`
  String get float_overlay_ratio_subtitle {
    return Intl.message(
      'When using float window, ratio control the size',
      name: 'float_overlay_ratio_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Platform Preference`
  String get prefer_platform {
    return Intl.message(
      'Platform Preference',
      name: 'prefer_platform',
      desc: '',
      args: [],
    );
  }

  /// `When enter popular/areas, first platform choice`
  String get prefer_platform_subtitle {
    return Intl.message(
      'When enter popular/areas, first platform choice',
      name: 'prefer_platform_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Resolution Preference`
  String get prefer_resolution {
    return Intl.message(
      'Resolution Preference',
      name: 'prefer_resolution',
      desc: '',
      args: [],
    );
  }

  /// `When enter live play, first resolution choice`
  String get prefer_resolution_subtitle {
    return Intl.message(
      'When enter live play, first resolution choice',
      name: 'prefer_resolution_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Auto Refresh Time`
  String get auto_refresh_time {
    return Intl.message(
      'Auto Refresh Time',
      name: 'auto_refresh_time',
      desc: '',
      args: [],
    );
  }

  /// `Auto refresh favorites rooms status`
  String get auto_refresh_time_subtitle {
    return Intl.message(
      'Auto refresh favorites rooms status',
      name: 'auto_refresh_time_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Auto close app`
  String get auto_shutdown_time_subtitle {
    return Intl.message(
      'Auto close app',
      name: 'auto_shutdown_time_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Auto ShutDown Time`
  String get auto_shutdown_time {
    return Intl.message(
      'Auto ShutDown Time',
      name: 'auto_shutdown_time',
      desc: '',
      args: [],
    );
  }

  /// `About`
  String get about {
    return Intl.message('About', name: 'about', desc: '', args: []);
  }

  /// `Version`
  String get version {
    return Intl.message('Version', name: 'version', desc: '', args: []);
  }

  /// `New Features`
  String get what_is_new {
    return Intl.message(
      'New Features',
      name: 'what_is_new',
      desc: '',
      args: [],
    );
  }

  /// `Check Update`
  String get check_update {
    return Intl.message(
      'Check Update',
      name: 'check_update',
      desc: '',
      args: [],
    );
  }

  /// `New version found: v{version}`
  String new_version_info(Object version) {
    return Intl.message(
      'New version found: v$version',
      name: 'new_version_info',
      desc: '',
      args: [version],
    );
  }

  /// `You are using the latest version.`
  String get no_new_version_info {
    return Intl.message(
      'You are using the latest version.',
      name: 'no_new_version_info',
      desc: '',
      args: [],
    );
  }

  /// `License`
  String get license {
    return Intl.message('License', name: 'license', desc: '', args: []);
  }

  /// `Project`
  String get project {
    return Intl.message('Project', name: 'project', desc: '', args: []);
  }

  /// `Donate Support`
  String get support_donate {
    return Intl.message(
      'Donate Support',
      name: 'support_donate',
      desc: '',
      args: [],
    );
  }

  /// `Issue Feedback`
  String get issue_feedback {
    return Intl.message(
      'Issue Feedback',
      name: 'issue_feedback',
      desc: '',
      args: [],
    );
  }

  /// `Development`
  String get develop_progress {
    return Intl.message(
      'Development',
      name: 'develop_progress',
      desc: '',
      args: [],
    );
  }

  /// `Project Homepage`
  String get project_page {
    return Intl.message(
      'Project Homepage',
      name: 'project_page',
      desc: '',
      args: [],
    );
  }

  /// `Project Alert`
  String get project_alert {
    return Intl.message(
      'Project Alert',
      name: 'project_alert',
      desc: '',
      args: [],
    );
  }

  /// `Contact`
  String get contact {
    return Intl.message('Contact', name: 'contact', desc: '', args: []);
  }

  /// `QQ Group`
  String get qq_group {
    return Intl.message('QQ Group', name: 'qq_group', desc: '', args: []);
  }

  /// `GroupNo.: {number}`
  String qq_group_num(Object number) {
    return Intl.message(
      'GroupNo.: $number',
      name: 'qq_group_num',
      desc: '',
      args: [number],
    );
  }

  /// `Telegram`
  String get telegram {
    return Intl.message('Telegram', name: 'telegram', desc: '', args: []);
  }

  /// `Email`
  String get email {
    return Intl.message('Email', name: 'email', desc: '', args: []);
  }

  /// `Github`
  String get github {
    return Intl.message('Github', name: 'github', desc: '', args: []);
  }

  /// `Help`
  String get help {
    return Intl.message('Help', name: 'help', desc: '', args: []);
  }

  /// `Timed Close`
  String get settings_timedclose_title {
    return Intl.message(
      'Timed Close',
      name: 'settings_timedclose_title',
      desc: '',
      args: [],
    );
  }

  /// `{time} Min`
  String timedclose_time(Object time) {
    return Intl.message(
      '$time Min',
      name: 'timedclose_time',
      desc: '',
      args: [time],
    );
  }

  /// `Video Fit`
  String get settings_videofit_title {
    return Intl.message(
      'Video Fit',
      name: 'settings_videofit_title',
      desc: '',
      args: [],
    );
  }

  /// `Default`
  String get videofit_contain {
    return Intl.message(
      'Default',
      name: 'videofit_contain',
      desc: '',
      args: [],
    );
  }

  /// `Fill`
  String get videofit_fill {
    return Intl.message('Fill', name: 'videofit_fill', desc: '', args: []);
  }

  /// `Cover`
  String get videofit_cover {
    return Intl.message('Cover', name: 'videofit_cover', desc: '', args: []);
  }

  /// `AdaptWidth`
  String get videofit_fitwidth {
    return Intl.message(
      'AdaptWidth',
      name: 'videofit_fitwidth',
      desc: '',
      args: [],
    );
  }

  /// `AdaptHeight`
  String get videofit_fitheight {
    return Intl.message(
      'AdaptHeight',
      name: 'videofit_fitheight',
      desc: '',
      args: [],
    );
  }

  /// `Danmaku Setting`
  String get settings_danmaku_title {
    return Intl.message(
      'Danmaku Setting',
      name: 'settings_danmaku_title',
      desc: '',
      args: [],
    );
  }

  /// `Danmaku area`
  String get settings_danmaku_area {
    return Intl.message(
      'Danmaku area',
      name: 'settings_danmaku_area',
      desc: '',
      args: [],
    );
  }

  /// `Danmaku switch`
  String get settings_danmaku_open {
    return Intl.message(
      'Danmaku switch',
      name: 'settings_danmaku_open',
      desc: '',
      args: [],
    );
  }

  /// `Only display color Danmaku`
  String get settings_danmaku_colour {
    return Intl.message(
      'Only display color Danmaku',
      name: 'settings_danmaku_colour',
      desc: '',
      args: [],
    );
  }

  /// `Danmaku opacity`
  String get settings_danmaku_opacity {
    return Intl.message(
      'Danmaku opacity',
      name: 'settings_danmaku_opacity',
      desc: '',
      args: [],
    );
  }

  /// `Danmaku speed`
  String get settings_danmaku_speed {
    return Intl.message(
      'Danmaku speed',
      name: 'settings_danmaku_speed',
      desc: '',
      args: [],
    );
  }

  /// `Danmaku fontsize`
  String get settings_danmaku_fontsize {
    return Intl.message(
      'Danmaku fontsize',
      name: 'settings_danmaku_fontsize',
      desc: '',
      args: [],
    );
  }

  /// `Border width`
  String get settings_danmaku_fontBorder {
    return Intl.message(
      'Border width',
      name: 'settings_danmaku_fontBorder',
      desc: '',
      args: [],
    );
  }

  /// `Danmaku amount`
  String get settings_danmaku_amount {
    return Intl.message(
      'Danmaku amount',
      name: 'settings_danmaku_amount',
      desc: '',
      args: [],
    );
  }

  /// `Follow`
  String get follow {
    return Intl.message('Follow', name: 'follow', desc: '', args: []);
  }

  /// `Unfollow`
  String get unfollow {
    return Intl.message('Unfollow', name: 'unfollow', desc: '', args: []);
  }

  /// `Are you sure to unfollow {name}?`
  String unfollow_message(Object name) {
    return Intl.message(
      'Are you sure to unfollow $name?',
      name: 'unfollow_message',
      desc: '',
      args: [name],
    );
  }

  /// `Followed`
  String get followed {
    return Intl.message('Followed', name: 'followed', desc: '', args: []);
  }

  /// `Offline`
  String get offline {
    return Intl.message('Offline', name: 'offline', desc: '', args: []);
  }

  /// `{name} is offline.`
  String info_is_offline(Object name) {
    return Intl.message(
      '$name is offline.',
      name: 'info_is_offline',
      desc: '',
      args: [name],
    );
  }

  /// `{name} is replaying.`
  String info_is_replay(Object name) {
    return Intl.message(
      '$name is replaying.',
      name: 'info_is_replay',
      desc: '',
      args: [name],
    );
  }

  /// `Play by float window`
  String get float_window_play {
    return Intl.message(
      'Play by float window',
      name: 'float_window_play',
      desc: '',
      args: [],
    );
  }

  /// `DLNA Broadcast`
  String get dlan_button_info {
    return Intl.message(
      'DLNA Broadcast',
      name: 'dlan_button_info',
      desc: '',
      args: [],
    );
  }

  /// `DLNA`
  String get dlan_title {
    return Intl.message('DLNA', name: 'dlan_title', desc: '', args: []);
  }

  /// `DLNA device not found`
  String get dlan_device_not_found {
    return Intl.message(
      'DLNA device not found',
      name: 'dlan_device_not_found',
      desc: '',
      args: [],
    );
  }

  /// `Play Video Failed`
  String get play_video_failed {
    return Intl.message(
      'Play Video Failed',
      name: 'play_video_failed',
      desc: '',
      args: [],
    );
  }

  /// `Retry`
  String get retry {
    return Intl.message('Retry', name: 'retry', desc: '', args: []);
  }

  /// `REPLAY`
  String get replay {
    return Intl.message('REPLAY', name: 'replay', desc: '', args: []);
  }

  /// `History`
  String get history {
    return Intl.message('History', name: 'history', desc: '', args: []);
  }

  /// `No history here`
  String get empty_history {
    return Intl.message(
      'No history here',
      name: 'empty_history',
      desc: '',
      args: [],
    );
  }

  /// `Sign In`
  String get supabase_sign_in {
    return Intl.message(
      'Sign In',
      name: 'supabase_sign_in',
      desc: '',
      args: [],
    );
  }

  /// `Sign Up`
  String get supabase_sign_up {
    return Intl.message(
      'Sign Up',
      name: 'supabase_sign_up',
      desc: '',
      args: [],
    );
  }

  /// `Sign in successful!`
  String get supabase_sign_success {
    return Intl.message(
      'Sign in successful!',
      name: 'supabase_sign_success',
      desc: '',
      args: [],
    );
  }

  /// `Sign in failure!`
  String get supabase_sign_failure {
    return Intl.message(
      'Sign in failure!',
      name: 'supabase_sign_failure',
      desc: '',
      args: [],
    );
  }

  /// `Please open the email to confirm`
  String get supabase_sign_confirm {
    return Intl.message(
      'Please open the email to confirm',
      name: 'supabase_sign_confirm',
      desc: '',
      args: [],
    );
  }

  /// `Mine`
  String get supabase_mine {
    return Intl.message('Mine', name: 'supabase_mine', desc: '', args: []);
  }

  /// `Uploading user profiles`
  String get supabase_mine_profiles {
    return Intl.message(
      'Uploading user profiles',
      name: 'supabase_mine_profiles',
      desc: '',
      args: [],
    );
  }

  /// `Follow the live streams as well as topics, etc.`
  String get supabase_mine_streams {
    return Intl.message(
      'Follow the live streams as well as topics, etc.',
      name: 'supabase_mine_streams',
      desc: '',
      args: [],
    );
  }

  /// `Log out`
  String get supabase_log_out {
    return Intl.message(
      'Log out',
      name: 'supabase_log_out',
      desc: '',
      args: [],
    );
  }

  /// `Enter your email`
  String get supabase_enter_email {
    return Intl.message(
      'Enter your email',
      name: 'supabase_enter_email',
      desc: '',
      args: [],
    );
  }

  /// `Please enter a valid email address`
  String get supabase_enter_valid_email {
    return Intl.message(
      'Please enter a valid email address',
      name: 'supabase_enter_valid_email',
      desc: '',
      args: [],
    );
  }

  /// `Please enter a password that is at least 6 characters long`
  String get supabase_enter_valid_password {
    return Intl.message(
      'Please enter a password that is at least 6 characters long',
      name: 'supabase_enter_valid_password',
      desc: '',
      args: [],
    );
  }

  /// `Enter your password`
  String get supabase_enter_password {
    return Intl.message(
      'Enter your password',
      name: 'supabase_enter_password',
      desc: '',
      args: [],
    );
  }

  /// `Unexpected error has occurred: {error}`
  String supabase_unexpected_err(Object error) {
    return Intl.message(
      'Unexpected error has occurred: $error',
      name: 'supabase_unexpected_err',
      desc: '',
      args: [error],
    );
  }

  /// `Forgot your password?`
  String get supabase_forgot_password {
    return Intl.message(
      'Forgot your password?',
      name: 'supabase_forgot_password',
      desc: '',
      args: [],
    );
  }

  /// `Don't have an account? Sign up`
  String get supabase_no_account {
    return Intl.message(
      'Don\'t have an account? Sign up',
      name: 'supabase_no_account',
      desc: '',
      args: [],
    );
  }

  /// `Already have an account? Sign in`
  String get supabase_has_account {
    return Intl.message(
      'Already have an account? Sign in',
      name: 'supabase_has_account',
      desc: '',
      args: [],
    );
  }

  /// `Send password reset email`
  String get supabase_reset_password {
    return Intl.message(
      'Send password reset email',
      name: 'supabase_reset_password',
      desc: '',
      args: [],
    );
  }

  /// `Back to sign in`
  String get supabase_back_sign_in {
    return Intl.message(
      'Back to sign in',
      name: 'supabase_back_sign_in',
      desc: '',
      args: [],
    );
  }

  /// `Update Password`
  String get supabase_update_password {
    return Intl.message(
      'Update Password',
      name: 'supabase_update_password',
      desc: '',
      args: [],
    );
  }

  /// `Are you sure want to exit?`
  String get exit_app {
    return Intl.message(
      'Are you sure want to exit?',
      name: 'exit_app',
      desc: '',
      args: [],
    );
  }

  /// `Yes`
  String get exit_yes {
    return Intl.message('Yes', name: 'exit_yes', desc: '', args: []);
  }

  /// `No`
  String get exit_no {
    return Intl.message('No', name: 'exit_no', desc: '', args: []);
  }

  /// `Double click to exit`
  String get double_click_to_exit {
    return Intl.message(
      'Double click to exit',
      name: 'double_click_to_exit',
      desc: '',
      args: [],
    );
  }

  /// `Change videoPlayer`
  String get change_player {
    return Intl.message(
      'Change videoPlayer',
      name: 'change_player',
      desc: '',
      args: [],
    );
  }

  /// `Change videoPlayer of liveroom`
  String get change_player_subtitle {
    return Intl.message(
      'Change videoPlayer of liveroom',
      name: 'change_player_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `enable hardcodec`
  String get enable_codec {
    return Intl.message(
      'enable hardcodec',
      name: 'enable_codec',
      desc: '',
      args: [],
    );
  }

  /// `System`
  String get system {
    return Intl.message('System', name: 'system', desc: '', args: []);
  }

  /// `Dark`
  String get dark {
    return Intl.message('Dark', name: 'dark', desc: '', args: []);
  }

  /// `Light`
  String get light {
    return Intl.message('Light', name: 'light', desc: '', args: []);
  }

  /// `second`
  String get second {
    return Intl.message('second', name: 'second', desc: '', args: []);
  }

  /// `minute`
  String get minute {
    return Intl.message('minute', name: 'minute', desc: '', args: []);
  }

  /// `hour`
  String get hour {
    return Intl.message('hour', name: 'hour', desc: '', args: []);
  }

  /// `day`
  String get day {
    return Intl.message('day', name: 'day', desc: '', args: []);
  }

  /// `Show`
  String get show {
    return Intl.message('Show', name: 'show', desc: '', args: []);
  }

  /// `Fans`
  String get fans {
    return Intl.message('Fans', name: 'fans', desc: '', args: []);
  }

  /// `User Level`
  String get user_level {
    return Intl.message('User Level', name: 'user_level', desc: '', args: []);
  }

  /// `Barrage from users below level {level} will be filtered`
  String user_level_danmu_format(Object level) {
    return Intl.message(
      'Barrage from users below level $level will be filtered',
      name: 'user_level_danmu_format',
      desc: '',
      args: [level],
    );
  }

  /// `The barrage of user fan cards below {level} will be filtered`
  String fans_level_danmu_format(Object level) {
    return Intl.message(
      'The barrage of user fan cards below $level will be filtered',
      name: 'fans_level_danmu_format',
      desc: '',
      args: [level],
    );
  }

  /// `Danmu Merge`
  String get danmu_merge {
    return Intl.message('Danmu Merge', name: 'danmu_merge', desc: '', args: []);
  }

  /// `The barrage of comments with a similarity greater than {level}% will be merged`
  String danmu_merge_format(Object level) {
    return Intl.message(
      'The barrage of comments with a similarity greater than $level% will be merged',
      name: 'danmu_merge_format',
      desc: '',
      args: [level],
    );
  }

  /// `Danmu Filter`
  String get danmu_filter {
    return Intl.message(
      'Danmu Filter',
      name: 'danmu_filter',
      desc: '',
      args: [],
    );
  }

  /// `Customize keyword filtering barrage`
  String get danmu_filter_info {
    return Intl.message(
      'Customize keyword filtering barrage',
      name: 'danmu_filter_info',
      desc: '',
      args: [],
    );
  }

  /// `Bullet screen keyword blocking`
  String get danmu_filter_keyword {
    return Intl.message(
      'Bullet screen keyword blocking',
      name: 'danmu_filter_keyword',
      desc: '',
      args: [],
    );
  }

  /// `Please enter keywords`
  String get keyword_input {
    return Intl.message(
      'Please enter keywords',
      name: 'keyword_input',
      desc: '',
      args: [],
    );
  }

  /// `Add`
  String get add {
    return Intl.message('Add', name: 'add', desc: '', args: []);
  }

  /// `{number} keywords have been added (click to remove)`
  String danmu_filter_keyword_add_info(Object number) {
    return Intl.message(
      '$number keywords have been added (click to remove)',
      name: 'danmu_filter_keyword_add_info',
      desc: '',
      args: [number],
    );
  }

  /// `Platform Settings`
  String get platform_settings {
    return Intl.message(
      'Platform Settings',
      name: 'platform_settings',
      desc: '',
      args: [],
    );
  }

  /// `Customize your favorite viewing platforms`
  String get platform_settings_info {
    return Intl.message(
      'Customize your favorite viewing platforms',
      name: 'platform_settings_info',
      desc: '',
      args: [],
    );
  }

  /// `Platform Show`
  String get platform_show {
    return Intl.message(
      'Platform Show',
      name: 'platform_show',
      desc: '',
      args: [],
    );
  }

  /// `Disclaimer`
  String get disclaimer {
    return Intl.message('Disclaimer', name: 'disclaimer', desc: '', args: []);
  }

  /// `I have read and agree`
  String get read_and_agree {
    return Intl.message(
      'I have read and agree',
      name: 'read_and_agree',
      desc: '',
      args: [],
    );
  }

  /// `Exit`
  String get exit {
    return Intl.message('Exit', name: 'exit', desc: '', args: []);
  }

  /// `Discover a new version: {version}`
  String found_new_version_format(Object version) {
    return Intl.message(
      'Discover a new version: $version',
      name: 'found_new_version_format',
      desc: '',
      args: [version],
    );
  }

  /// `The current version is already the latest version`
  String get is_new_version {
    return Intl.message(
      'The current version is already the latest version',
      name: 'is_new_version',
      desc: '',
      args: [],
    );
  }

  /// `Check update failed`
  String get check_update_failed {
    return Intl.message(
      'Check update failed',
      name: 'check_update_failed',
      desc: '',
      args: [],
    );
  }

  /// `Please grant access to the album`
  String get grant_access_album {
    return Intl.message(
      'Please grant access to the album',
      name: 'grant_access_album',
      desc: '',
      args: [],
    );
  }

  /// `Please grant access to the file`
  String get grant_access_file {
    return Intl.message(
      'Please grant access to the file',
      name: 'grant_access_file',
      desc: '',
      args: [],
    );
  }

  /// `Copy to clipboard`
  String get copy_to_clipboard {
    return Intl.message(
      'Copy to clipboard',
      name: 'copy_to_clipboard',
      desc: '',
      args: [],
    );
  }

  /// `Copy to clipboard failed`
  String get copy_to_clipboard_failed {
    return Intl.message(
      'Copy to clipboard failed',
      name: 'copy_to_clipboard_failed',
      desc: '',
      args: [],
    );
  }

  /// `Unable to read clipboard contents`
  String get unable_to_read_clipboard_contents {
    return Intl.message(
      'Unable to read clipboard contents',
      name: 'unable_to_read_clipboard_contents',
      desc: '',
      args: [],
    );
  }

  /// `Reading clipboard content failed`
  String get reading_clipboard_content_failed {
    return Intl.message(
      'Reading clipboard content failed',
      name: 'reading_clipboard_content_failed',
      desc: '',
      args: [],
    );
  }

  /// `Third-party`
  String get three_party_authentication {
    return Intl.message(
      'Third-party',
      name: 'three_party_authentication',
      desc: '',
      args: [],
    );
  }

  /// `Not supported`
  String get not_supported {
    return Intl.message(
      'Not supported',
      name: 'not_supported',
      desc: '',
      args: [],
    );
  }

  /// `live`
  String get live {
    return Intl.message('live', name: 'live', desc: '', args: []);
  }

  /// `Bilibili accounts require login to view high-definition live streams, and there is currently no such restriction on other platforms.`
  String get bilibili_need_login_info {
    return Intl.message(
      'Bilibili accounts require login to view high-definition live streams, and there is currently no such restriction on other platforms.',
      name: 'bilibili_need_login_info',
      desc: '',
      args: [],
    );
  }

  /// `BiLiBiLi`
  String get bilibili {
    return Intl.message('BiLiBiLi', name: 'bilibili', desc: '', args: []);
  }

  /// `NetEase CC`
  String get cc {
    return Intl.message('NetEase CC', name: 'cc', desc: '', args: []);
  }

  /// `Tiktok`
  String get douyin {
    return Intl.message('Tiktok', name: 'douyin', desc: '', args: []);
  }

  /// `Douyu`
  String get douyu {
    return Intl.message('Douyu', name: 'douyu', desc: '', args: []);
  }

  /// `Huya`
  String get huya {
    return Intl.message('Huya', name: 'huya', desc: '', args: []);
  }

  /// `Kwai`
  String get kuaishou {
    return Intl.message('Kwai', name: 'kuaishou', desc: '', args: []);
  }

  /// `IPTV`
  String get iptv {
    return Intl.message('IPTV', name: 'iptv', desc: '', args: []);
  }

  /// `All`
  String get all {
    return Intl.message('All', name: 'all', desc: '', args: []);
  }

  /// `Soop`
  String get soop {
    return Intl.message('Soop', name: 'soop', desc: '', args: []);
  }

  /// `YY`
  String get yy {
    return Intl.message('YY', name: 'yy', desc: '', args: []);
  }

  /// `JuHe`
  String get juhe {
    return Intl.message('JuHe', name: 'juhe', desc: '', args: []);
  }

  /// `Not Login`
  String get login_not {
    return Intl.message('Not Login', name: 'login_not', desc: '', args: []);
  }

  /// `Login has expired, please log in again`
  String get login_expired {
    return Intl.message(
      'Login has expired, please log in again',
      name: 'login_expired',
      desc: '',
      args: [],
    );
  }

  /// `Failed to obtain user information. You can go to account management to retry`
  String get login_failed {
    return Intl.message(
      'Failed to obtain user information. You can go to account management to retry',
      name: 'login_failed',
      desc: '',
      args: [],
    );
  }

  /// `Fill in username and password to log in`
  String get login_by_username_password {
    return Intl.message(
      'Fill in username and password to log in',
      name: 'login_by_username_password',
      desc: '',
      args: [],
    );
  }

  /// `QR Login`
  String get login_by_qr {
    return Intl.message('QR Login', name: 'login_by_qr', desc: '', args: []);
  }

  /// `Scan the QR code to log in using the {site} app`
  String login_by_qr_info(Object site) {
    return Intl.message(
      'Scan the QR code to log in using the $site app',
      name: 'login_by_qr_info',
      desc: '',
      args: [site],
    );
  }

  /// `Manually enter cookie login`
  String get login_by_cookie_info {
    return Intl.message(
      'Manually enter cookie login',
      name: 'login_by_cookie_info',
      desc: '',
      args: [],
    );
  }

  /// `Input Cookie`
  String get input_cookie {
    return Intl.message(
      'Input Cookie',
      name: 'input_cookie',
      desc: '',
      args: [],
    );
  }

  /// `Cookie verification failed!`
  String get cookie_check_failed {
    return Intl.message(
      'Cookie verification failed!',
      name: 'cookie_check_failed',
      desc: '',
      args: [],
    );
  }

  /// `Are you sure you want to log out of your {site} account?`
  String login_account_exit(Object site) {
    return Intl.message(
      'Are you sure you want to log out of your $site account?',
      name: 'login_account_exit',
      desc: '',
      args: [site],
    );
  }

  /// `QR code loading failed`
  String get qr_loading_failed {
    return Intl.message(
      'QR code loading failed',
      name: 'qr_loading_failed',
      desc: '',
      args: [],
    );
  }

  /// `The QR code has expired`
  String get qr_loading_expired {
    return Intl.message(
      'The QR code has expired',
      name: 'qr_loading_expired',
      desc: '',
      args: [],
    );
  }

  /// `Refresh QR code`
  String get qr_loading_refresh {
    return Intl.message(
      'Refresh QR code',
      name: 'qr_loading_refresh',
      desc: '',
      args: [],
    );
  }

  /// `The QR code has been scanned. Please confirm login on your phone`
  String get qr_confirm {
    return Intl.message(
      'The QR code has been scanned. Please confirm login on your phone',
      name: 'qr_confirm',
      desc: '',
      args: [],
    );
  }

  /// `Select Transparency`
  String get select_transparency {
    return Intl.message(
      'Select Transparency',
      name: 'select_transparency',
      desc: '',
      args: [],
    );
  }

  /// `Theme Color And Transparency`
  String get theme_color_and_transparency {
    return Intl.message(
      'Theme Color And Transparency',
      name: 'theme_color_and_transparency',
      desc: '',
      args: [],
    );
  }

  /// `Network`
  String get network {
    return Intl.message('Network', name: 'network', desc: '', args: []);
  }

  /// `Import M3u live streaming source`
  String get import_live_streaming_source {
    return Intl.message(
      'Import M3u live streaming source',
      name: 'import_live_streaming_source',
      desc: '',
      args: [],
    );
  }

  /// `Synchronize TV Data`
  String get synchronize_tv_data {
    return Intl.message(
      'Synchronize TV Data',
      name: 'synchronize_tv_data',
      desc: '',
      args: [],
    );
  }

  /// `Remote synchronization of data to TV`
  String get synchronize_tv_data_info {
    return Intl.message(
      'Remote synchronization of data to TV',
      name: 'synchronize_tv_data_info',
      desc: '',
      args: [],
    );
  }

  /// `Local Import`
  String get local_import {
    return Intl.message(
      'Local Import',
      name: 'local_import',
      desc: '',
      args: [],
    );
  }

  /// `Network Import`
  String get network_import {
    return Intl.message(
      'Network Import',
      name: 'network_import',
      desc: '',
      args: [],
    );
  }

  /// `Please enter the download address`
  String get download_address_enter {
    return Intl.message(
      'Please enter the download address',
      name: 'download_address_enter',
      desc: '',
      args: [],
    );
  }

  /// `Download link`
  String get download_address {
    return Intl.message(
      'Download link',
      name: 'download_address',
      desc: '',
      args: [],
    );
  }

  /// `Please enter the correct download address`
  String get download_address_enter_check {
    return Intl.message(
      'Please enter the correct download address',
      name: 'download_address_enter_check',
      desc: '',
      args: [],
    );
  }

  /// `file name`
  String get file_name {
    return Intl.message('file name', name: 'file_name', desc: '', args: []);
  }

  /// `Please enter a file name`
  String get file_name_input {
    return Intl.message(
      'Please enter a file name',
      name: 'file_name_input',
      desc: '',
      args: [],
    );
  }

  /// `Player`
  String get player {
    return Intl.message('Player', name: 'player', desc: '', args: []);
  }

  /// `Ali`
  String get player_ali {
    return Intl.message('Ali', name: 'player_ali', desc: '', args: []);
  }

  /// `system`
  String get player_system {
    return Intl.message('system', name: 'player_system', desc: '', args: []);
  }

  /// `Version History`
  String get version_history {
    return Intl.message(
      'Version History',
      name: 'version_history',
      desc: '',
      args: [],
    );
  }

  /// `Historical version update records`
  String get version_history_info {
    return Intl.message(
      'Historical version update records',
      name: 'version_history_info',
      desc: '',
      args: [],
    );
  }

  /// `Version history updates`
  String get version_history_updates {
    return Intl.message(
      'Version history updates',
      name: 'version_history_updates',
      desc: '',
      args: [],
    );
  }

  /// `Help & Support`
  String get help_and_support {
    return Intl.message(
      'Help & Support',
      name: 'help_and_support',
      desc: '',
      args: [],
    );
  }

  /// `Thank you for using it!`
  String get thank_title {
    return Intl.message(
      'Thank you for using it!',
      name: 'thank_title',
      desc: '',
      args: [],
    );
  }

  /// `If you have any better suggestions or opinions, please feel free to contact us.`
  String get thank_info {
    return Intl.message(
      'If you have any better suggestions or opinions, please feel free to contact us.',
      name: 'thank_info',
      desc: '',
      args: [],
    );
  }

  /// `Link Parse`
  String get live_room_link_parsing {
    return Intl.message(
      'Link Parse',
      name: 'live_room_link_parsing',
      desc: '',
      args: [],
    );
  }

  /// `Live Room Jump`
  String get live_room_jump {
    return Intl.message(
      'Live Room Jump',
      name: 'live_room_jump',
      desc: '',
      args: [],
    );
  }

  /// `Link Jump`
  String get live_room_link_jump {
    return Intl.message(
      'Link Jump',
      name: 'live_room_link_jump',
      desc: '',
      args: [],
    );
  }

  /// `Obtain direct link`
  String get live_room_link_direct {
    return Intl.message(
      'Obtain direct link',
      name: 'live_room_link_direct',
      desc: '',
      args: [],
    );
  }

  /// `Enter or paste the link of {site} live broadcast`
  String live_room_link_input(Object site) {
    return Intl.message(
      'Enter or paste the link of $site live broadcast',
      name: 'live_room_link_input',
      desc: '',
      args: [site],
    );
  }

  /// `Link cannot be empty`
  String get link_empty {
    return Intl.message(
      'Link cannot be empty',
      name: 'link_empty',
      desc: '',
      args: [],
    );
  }

  /// `Unable to parse this link`
  String get live_room_link_parse_failed {
    return Intl.message(
      'Unable to parse this link',
      name: 'live_room_link_parse_failed',
      desc: '',
      args: [],
    );
  }

  /// `Reading straight chain failed, unable to read clarity`
  String get live_room_clarity_parse_failed {
    return Intl.message(
      'Reading straight chain failed, unable to read clarity',
      name: 'live_room_clarity_parse_failed',
      desc: '',
      args: [],
    );
  }

  /// `Select Clarity`
  String get live_room_clarity_select {
    return Intl.message(
      'Select Clarity',
      name: 'live_room_clarity_select',
      desc: '',
      args: [],
    );
  }

  /// `Select Clarity Line`
  String get live_room_clarity_line_select {
    return Intl.message(
      'Select Clarity Line',
      name: 'live_room_clarity_line_select',
      desc: '',
      args: [],
    );
  }

  /// `Clarity Line`
  String get live_room_clarity_line {
    return Intl.message(
      'Clarity Line',
      name: 'live_room_clarity_line',
      desc: '',
      args: [],
    );
  }

  /// `The straight chain has been copied`
  String get live_room_link_direct_copied {
    return Intl.message(
      'The straight chain has been copied',
      name: 'live_room_link_direct_copied',
      desc: '',
      args: [],
    );
  }

  /// `Reading straight chain failed`
  String get live_room_link_direct_read_failed {
    return Intl.message(
      'Reading straight chain failed',
      name: 'live_room_link_direct_read_failed',
      desc: '',
      args: [],
    );
  }

  /// `Auto-Rotate Screen`
  String get auto_rotate_screen {
    return Intl.message(
      'Auto-Rotate Screen',
      name: 'auto_rotate_screen',
      desc: '',
      args: [],
    );
  }

  /// `When playing in full screen, the screen will automatically rotate`
  String get auto_rotate_screen_info {
    return Intl.message(
      'When playing in full screen, the screen will automatically rotate',
      name: 'auto_rotate_screen_info',
      desc: '',
      args: [],
    );
  }

  /// `Search Live`
  String get live_room_search {
    return Intl.message(
      'Search Live',
      name: 'live_room_search',
      desc: '',
      args: [],
    );
  }

  /// `Link Access`
  String get live_room_link_access {
    return Intl.message(
      'Link Access',
      name: 'live_room_link_access',
      desc: '',
      args: [],
    );
  }

  /// `Search`
  String get search {
    return Intl.message('Search', name: 'search', desc: '', args: []);
  }

  /// `Externally Open Live`
  String get live_room_open_external {
    return Intl.message(
      'Externally Open Live',
      name: 'live_room_open_external',
      desc: '',
      args: [],
    );
  }

  /// `Screen Caste`
  String get screen_caste {
    return Intl.message(
      'Screen Caste',
      name: 'screen_caste',
      desc: '',
      args: [],
    );
  }

  /// `Menu`
  String get menu {
    return Intl.message('Menu', name: 'menu', desc: '', args: []);
  }

  /// `Clear History`
  String get clear_history {
    return Intl.message(
      'Clear History',
      name: 'clear_history',
      desc: '',
      args: [],
    );
  }

  /// `Are you sure you want to clear the history?`
  String get clear_history_confirm {
    return Intl.message(
      'Are you sure you want to clear the history?',
      name: 'clear_history_confirm',
      desc: '',
      args: [],
    );
  }

  /// `Appearance`
  String get settings_app {
    return Intl.message('Appearance', name: 'settings_app', desc: '', args: []);
  }

  /// `Home`
  String get settings_home {
    return Intl.message('Home', name: 'settings_home', desc: '', args: []);
  }

  /// `Player`
  String get settings_player {
    return Intl.message('Player', name: 'settings_player', desc: '', args: []);
  }

  /// `Favorite`
  String get settings_favorite {
    return Intl.message(
      'Favorite',
      name: 'settings_favorite',
      desc: '',
      args: [],
    );
  }

  /// `Timing Closure`
  String get settings_time_close {
    return Intl.message(
      'Timing Closure',
      name: 'settings_time_close',
      desc: '',
      args: [],
    );
  }

  /// `Other`
  String get settings_other {
    return Intl.message('Other', name: 'settings_other', desc: '', args: []);
  }

  /// `Mobile Resolution Preference`
  String get prefer_resolution_mobile {
    return Intl.message(
      'Mobile Resolution Preference',
      name: 'prefer_resolution_mobile',
      desc: '',
      args: [],
    );
  }

  /// ` When entering the live streaming page, the preferred video clarity for mobile networks`
  String get prefer_resolution_mobile_subtitle {
    return Intl.message(
      ' When entering the live streaming page, the preferred video clarity for mobile networks',
      name: 'prefer_resolution_mobile_subtitle',
      desc: '',
      args: [],
    );
  }

  /// `Log`
  String get settings_log {
    return Intl.message('Log', name: 'settings_log', desc: '', args: []);
  }

  /// `Danmuku Controller`
  String get settings_danmuku_controller {
    return Intl.message(
      'Danmuku Controller',
      name: 'settings_danmuku_controller',
      desc: '',
      args: [],
    );
  }

  /// `Change Danmuku Controller`
  String get settings_danmuku_controller_info {
    return Intl.message(
      'Change Danmuku Controller',
      name: 'settings_danmuku_controller_info',
      desc: '',
      args: [],
    );
  }

  /// `Close`
  String get settings_close {
    return Intl.message('Close', name: 'settings_close', desc: '', args: []);
  }

  /// `Delay`
  String get settings_delay {
    return Intl.message('Delay', name: 'settings_delay', desc: '', args: []);
  }

  /// `Delay Close`
  String get settings_delay_close {
    return Intl.message(
      'Delay Close',
      name: 'settings_delay_close',
      desc: '',
      args: [],
    );
  }

  /// `The scheduled shutdown has expired. Would you like to delay the shutdown?`
  String get settings_delay_close_info {
    return Intl.message(
      'The scheduled shutdown has expired. Would you like to delay the shutdown?',
      name: 'settings_delay_close_info',
      desc: '',
      args: [],
    );
  }

  /// `Smooth`
  String get bit_rate_250 {
    return Intl.message('Smooth', name: 'bit_rate_250', desc: '', args: []);
  }

  /// `Standard`
  String get bit_rate_500 {
    return Intl.message('Standard', name: 'bit_rate_500', desc: '', args: []);
  }

  /// `High Definition`
  String get bit_rate_1000 {
    return Intl.message(
      'High Definition',
      name: 'bit_rate_1000',
      desc: '',
      args: [],
    );
  }

  /// `Ultra HD`
  String get bit_rate_2000 {
    return Intl.message('Ultra HD', name: 'bit_rate_2000', desc: '', args: []);
  }

  /// `Blu-ray `
  String get bit_rate_4000 {
    return Intl.message('Blu-ray ', name: 'bit_rate_4000', desc: '', args: []);
  }

  /// `Origin`
  String get bit_rate_0 {
    return Intl.message('Origin', name: 'bit_rate_0', desc: '', args: []);
  }

  /// `Cache Manage`
  String get cache_manage {
    return Intl.message(
      'Cache Manage',
      name: 'cache_manage',
      desc: '',
      args: [],
    );
  }

  /// `Are you sure you want to clear the cache?`
  String get cache_manage_clear_prompt {
    return Intl.message(
      'Are you sure you want to clear the cache?',
      name: 'cache_manage_clear_prompt',
      desc: '',
      args: [],
    );
  }

  /// `Clear all cache`
  String get cache_manage_clear_all {
    return Intl.message(
      'Clear all cache',
      name: 'cache_manage_clear_all',
      desc: '',
      args: [],
    );
  }

  /// `Clear image cache`
  String get cache_manage_clear_image {
    return Intl.message(
      'Clear image cache',
      name: 'cache_manage_clear_image',
      desc: '',
      args: [],
    );
  }

  /// `Clear area cache`
  String get cache_manage_clear_area {
    return Intl.message(
      'Clear area cache',
      name: 'cache_manage_clear_area',
      desc: '',
      args: [],
    );
  }
}

class AppLocalizationDelegate extends LocalizationsDelegate<S> {
  const AppLocalizationDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale.fromSubtags(languageCode: 'en'),
      Locale.fromSubtags(languageCode: 'zh', countryCode: 'CN'),
    ];
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale);
  @override
  Future<S> load(Locale locale) => S.load(locale);
  @override
  bool shouldReload(AppLocalizationDelegate old) => false;

  bool _isSupported(Locale locale) {
    for (var supportedLocale in supportedLocales) {
      if (supportedLocale.languageCode == locale.languageCode) {
        return true;
      }
    }
    return false;
  }
}
